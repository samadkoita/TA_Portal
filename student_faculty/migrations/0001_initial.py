# Generated by Django 2.2.6 on 2019-12-24 14:43

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=40, verbose_name='Course Name')),
                ('course_details', models.CharField(blank=True, max_length=1000, verbose_name='Course Details')),
                ('eligibility_criteria', models.CharField(blank=True, max_length=500, verbose_name='Eligibility')),
                ('department', models.CharField(choices=[('CS', 'CS'), ('EE', 'EE'), ('EP', 'EP')], max_length=50, verbose_name='Department')),
                ('deadline', models.DateField(default=datetime.date(2019, 12, 31))),
                ('duration', models.CharField(choices=[('Full Semester', 'Full Semester'), ('Half Semester', 'Half Semester')], default='Full Semester', max_length=20)),
                ('extra_questions', models.CharField(max_length=1500)),
                ('year', models.IntegerField()),
                ('semester', models.PositiveSmallIntegerField(choices=[(1, 'Autumn'), (2, 'Spring'), (3, 'Summer')])),
            ],
        ),
        migrations.CreateModel(
            name='StudentUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50)),
                ('ldap_id', models.CharField(blank=True, max_length=50, null=True)),
                ('roll_no', models.CharField(blank=True, max_length=9, null=True, verbose_name='Roll Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('year_of_study', models.CharField(blank=True, max_length=1, null=True, verbose_name='Year Of Study')),
                ('contact_no', models.CharField(blank=True, max_length=12, null=True, verbose_name='Phone')),
                ('cpi', models.FloatField(blank=True, null=True, verbose_name='CPI')),
                ('selected_yet', models.BooleanField(blank=True, default=False, null=True)),
                ('department', models.CharField(blank=True, max_length=30, null=True)),
                ('department_name', models.CharField(blank=True, max_length=200, null=True)),
                ('degree', models.CharField(blank=True, max_length=200, null=True)),
                ('degree_name', models.CharField(blank=True, max_length=200, null=True)),
                ('join_year', models.CharField(blank=True, max_length=5, null=True)),
                ('graduation_year', models.CharField(blank=True, max_length=5, null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Student Users',
            },
        ),
        migrations.CreateModel(
            name='StudentFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field1', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], verbose_name='Field1- Replace with actual parameter')),
                ('field2', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], verbose_name='Field2')),
                ('field3', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], verbose_name='Field3')),
                ('comments', models.CharField(max_length=1000, verbose_name='Comments')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_feedback_course', to='student_faculty.Course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_feedback_student', to='student_faculty.StudentUser')),
            ],
        ),
        migrations.CreateModel(
            name='FacultyUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('department', models.CharField(choices=[('CS', 'CS'), ('EE', 'EE'), ('EP', 'EP')], max_length=50, verbose_name='Department')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Faculty Users',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='profs',
            field=models.ManyToManyField(to='student_faculty.FacultyUser'),
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Accepted', 'Accepted'), ('Waitlist', 'Waitlist'), ('Rejected', 'Rejected'), ('On Hold', 'On Hold')], default='On Hold', max_length=100)),
                ('grade', models.CharField(max_length=2, verbose_name='Grade')),
                ('answers_to_questions', models.CharField(max_length=6000, verbose_name='Answers')),
                ('waitlist_num', models.IntegerField(verbose_name='Waitlist Number')),
                ('created_or_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_faculty.Course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_faculty.StudentUser')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='course',
            unique_together={('course_name', 'year', 'semester')},
        ),
    ]
